gradio.TabbedInterface(interface_list, Â·Â·Â·)
A TabbedInterface is created by providing a list of Interfaces, each of which gets rendered in a separate tab.
List[Interface]
required
a list of interfaces to be rendered in tabs.
List[str] | None
default: None
a list of tab names. If None, the tab names will be "Tab 1", "Tab 2", etc.
str | None
default: None
a title for the interface; if provided, appears above the input and output components in large font. Also used as the tab title when opened in a browser window.
Theme | None
default: None

bool | None
default: None
whether to allow basic telemetry. If None, will use GRADIO_ANALYTICS_ENABLED environment variable or default to True.
str | None
default: None
custom css or path to custom css file to apply to entire Blocks
import gradio as gr

greeter_1 = gr.Interface(lambda name: f"Hello {name}!", inputs="textbox", outputs=gr.Textbox(label="Greeter 1"))
greeter_2 = gr.Interface(lambda name: f"Greetings {name}!", inputs="textbox", outputs=gr.Textbox(label="Greeter 2"))
demo = gr.Parallel(greeter_1, greeter_2)

if __name__ == "__main__":
    demo.launch()
import gradio as gr

generator1 = gr.load("huggingface/gpt2")
generator2 = gr.load("huggingface/EleutherAI/gpt-neo-2.7B")
generator3 = gr.load("huggingface/EleutherAI/gpt-j-6B")

demo = gr.Parallel(generator1, generator2, generator3)

if __name__ == "__main__":
    demo.launch()