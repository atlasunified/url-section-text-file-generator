gradio.Examples(examples, inputs, Â·Â·Â·)
This class is a wrapper over the Dataset component and can be used to create Examples for Blocks / Interfaces. Populates the Dataset component with examples and assigns event listener so that clicking on an example populates the input/output components. Optionally handles example caching for fast inference. 
List[Any] | List[List[Any]] | str
required
example inputs that can be clicked to populate specific components. Should be nested list, in which the outer list consists of samples and each inner list consists of an input corresponding to each input component. A string path to a directory of examples can also be provided but it should be within the directory with the python file running the gradio app. If there are multiple input components and a directory is provided, a log.csv file must be present in the directory to link corresponding inputs.
IOComponent | List[IOComponent]
required
the component or list of components corresponding to the examples
IOComponent | List[IOComponent] | None
default: None
optionally, provide the component or list of components corresponding to the output of the examples. Required if `cache` is True.
Callable | None
default: None
optionally, provide the function to run to generate the outputs corresponding to the examples. Required if `cache` is True.
bool
default: False
if True, caches examples for fast runtime. If True, then `fn` and `outputs` need to be provided
int
default: 10
how many examples to show per page.
str | None
default: "Examples"
the label to use for the examples component (by default, "Examples")
str | None
default: None
an optional string that is assigned as the id of this component in the HTML DOM.
bool
default: False
if cache_examples is False, clicking on an example does not run the function when an example is clicked. Set this to True to run the function when an example is clicked. Has no effect if cache_examples is True.
bool
default: True
if True, preprocesses the example input before running the prediction function and caching the output. Only applies if cache_examples is True.
bool
default: True
if True, postprocesses the example output after running the prediction function and before caching. Only applies if cache_examples is True.
bool
default: False
If True, then the function should process a batch of inputs, meaning that it should accept a list of input values for each parameter. Used only if cache_examples is True.