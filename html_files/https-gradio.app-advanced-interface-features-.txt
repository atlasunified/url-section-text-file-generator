<!DOCTYPE html>
<html lang="en">
  <head>
    
      <title>Advanced Interface Features</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="description" content="A Step-by-Step Gradio Tutorial">
<meta name="author" content="Gradio Team">
<meta property="og:title" content="Advanced Interface Features">
<meta property="og:type" content="website">
<meta property="og:url" content="https://gradio.app/advanced-interface-features">
<meta property="og:description" content="A Step-by-Step Gradio Tutorial">
<meta property="og:image" content="https://www.gradio.app/assets/img/meta-image.png" />
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:creator" content="@Gradio">
<meta name="twitter:title" content="Advanced Interface Features">
<meta name="twitter:description" content="A Step-by-Step Gradio Tutorial.">
<meta name="twitter:image" content="https://www.gradio.app/assets/img/meta-image.png">

<link rel="icon" type="image/png" href="/assets/img/logo.png">
<link rel="stylesheet" href="/style.89f71609db418e667531.css">
<link rel="stylesheet" href="/assets/prism.css">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:ital,wght@0,200;0,300;0,400;0,600;0,700;0,900;1,200;1,300;1,400;1,600;1,700;1,900&display=swap" rel="stylesheet">
<link rel="canonical" href="https://gradio.app/advanced-interface-features" />


<script async src="https://www.googletagmanager.com/gtag/js?id=UA-156449732-1"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag() {
        dataLayer.push(arguments);
    }
    gtag('js', new Date());
    gtag('config', 'UA-156449732-1');
</script>
    
    <link rel="stylesheet" href="/style.89f71609db418e667531.css">
    <link rel="stylesheet" href="/assets/prism.css">
  </head>
  <body>
    <div
  class="container mx-auto flex flex-wrap justify-between flex-row relative items-center px-4 py-5 gap-6 text-lg z-50"
>
  <a href="/">
    <img src="/assets/gradio.svg" >
  </a>
  <svg
    class="h-8 w-8 lg:hidden"
    viewBox="-10 -10 20 20"
    onclick='document.querySelector("nav").classList.toggle("hidden"),document.querySelector("nav").classList.toggle("flex")'
  >
    <rect x="-7" y="-6" width="14" height="2"></rect>
    <rect x="-7" y="-1" width="14" height="2"></rect>
    <rect x="-7" y="4" width="14" height="2"></rect>
  </svg>
  <nav
    class="hidden w-full flex-col gap-3 lg:flex lg:w-auto lg:flex-row lg:gap-8"
  >
    <a class="thin-link flex items-center gap-3" href="/quickstart"
      ><span>â¡</span> <span>Quickstart</span>
    </a>
    <a class="thin-link flex items-center gap-3" href="/docs"
      ><span>âï¸</span> <span>Docs</span>
    </a>
    <a class="thin-link flex items-center gap-3" href="/guides"
      ><span>ð¡</span> <span>Guides</span></a
    >
    <a class="thin-link flex items-center gap-3" href="/demos"
      ><span>ð¢</span> <span>Demos</span></a
    >
    <div
      class="group relative flex cursor-pointer items-center gap-3"
      onclick='document.querySelector(".help-menu").classList.toggle("flex"),document.querySelector(".help-menu").classList.toggle("hidden")'
    >
      <span>ð</span> <span>Community</span>
      <svg
        class="h-4 w-4"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 20 20"
      >
        <path
          d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"
        ></path>
      </svg>
      <div
        class="help-menu absolute top-6 hidden w-52 flex-col bg-white shadow group-hover:flex sm:right-0"
      >
        <a
          class="thin-link inline-block px-4 py-2 hover:bg-gray-100"
          href="https://github.com/gradio-app/gradio/issues/new/choose"
          target="_blank"
          >File an Issue</a
        >
        <a
          class="thin-link inline-block px-4 py-2 hover:bg-gray-100"
          href="https://discuss.huggingface.co/c/gradio/26"
          target="_blank"
          >Discuss</a
        >
        <a
          class="thin-link inline-block px-4 py-2 hover:bg-gray-100"
          target="_blank"
          href="https://discord.gg/feTf9x3ZSB"
          >Discord</a
        >
        <a
          class="thin-link inline-block px-4 py-2 hover:bg-gray-100"
          target="_blank"
          href="https://gradio.curated.co/"
          >Newsletter</a
        >
      </div>
    </div>
    <a class="thin-link flex items-center gap-3" href="https://github.com/gradio-app/gradio"
      >
    <img src="/assets/img/github-black.svg" class="w-6">
    </a>
  </nav>
</div>
    <div class="container mx-auto px-4 flex gap-4 relative">
      <div class="side-navigation h-screen leading-relaxed sticky top-0 text-md overflow-y-auto overflow-x-hidden hidden lg:block rounded-t-xl bg-gradient-to-r from-white to-gray-50"
           style="min-width: 18%">
        
          
          <div class="category-link  mb-2  font-semibold px-4 pt-2 text-ellipsis block"
             style="max-width: 12rem">
            Getting Started 
            
          </div>
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/quickstart/">Quickstart</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/key-features/">Key Features</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/sharing-your-app/">Sharing Your App</a>
            
          
        
          
          <div class="category-link  my-2  font-semibold px-4 pt-2 text-ellipsis block"
             style="max-width: 12rem">
            Building Interfaces 
            
          </div>
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/interface-state/">Interface State</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/reactive-interfaces/">Reactive Interfaces</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/more-on-examples/">More On Examples</a>
            
          
            <a class="guide-link  current-nav-link pb-1  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/advanced-interface-features/">Advanced Interface Features</a>
            
              <div class="navigation max-w-full bg-gradient-to-r from-orange-50 to-orange-100 p-2 mx-2 border-l-2 border-orange-500 mb-2">
              </div>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/four-kinds-of-interfaces/">Four Kinds Of Interfaces</a>
            
          
        
          
          <div class="category-link  my-2  font-semibold px-4 pt-2 text-ellipsis block"
             style="max-width: 12rem">
            Building With Blocks 
            
          </div>
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/blocks-and-event-listeners/">Blocks And Event Listeners</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/controlling-layout/">Controlling Layout</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/state-in-blocks/">State In Blocks</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/custom-CSS-and-JS/">Custom CSS And JS</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/using-blocks-like-functions/">Using Blocks Like Functions</a>
            
          
        
          
          <div class="category-link  my-2  font-semibold px-4 pt-2 text-ellipsis block"
             style="max-width: 12rem">
            Integrating Other Frameworks 
            
          </div>
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/using-hugging-face-integrations/">Using Hugging Face Integrations</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/Gradio-and-Comet/">Gradio And Comet</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/Gradio-and-ONNX-on-Hugging-Face/">Gradio And ONNX On Hugging Face</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/Gradio-and-Wandb-Integration/">Gradio And Wandb Integration</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/image-classification-in-pytorch/">Image Classification In Pytorch</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/image-classification-in-tensorflow/">Image Classification In Tensorflow</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/image-classification-with-vision-transformers/">Image Classification With Vision Transformers</a>
            
          
        
          
          <div class="category-link  my-2  font-semibold px-4 pt-2 text-ellipsis block"
             style="max-width: 12rem">
            Tabular Data Science And Plots 
            
          </div>
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/connecting-to-a-database/">Connecting To A Database</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/creating-a-dashboard-from-bigquery-data/">Creating A Dashboard From Bigquery Data</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/creating-a-dashboard-from-supabase-data/">Creating A Dashboard From Supabase Data</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/creating-a-realtime-dashboard-from-google-sheets/">Creating A Realtime Dashboard From Google Sheets</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/plot-component-for-maps/">Plot Component For Maps</a>
            
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/using-gradio-for-tabular-workflows/">Using Gradio For Tabular Workflows</a>
            
          
        
          
          <div class="category-link  my-2  font-semibold px-4 pt-2 text-ellipsis block"
             style="max-width: 12rem">
            Client Libraries 
            
          </div>
          
            <a class="guide-link   -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/getting-started-with-the-python-client/">Getting Started With The Python Client</a>
            
          
        
          
          <div class="category-link  my-2  font-semibold px-4 pt-2 text-ellipsis block"
             style="max-width: 12rem">
            Other Tutorials 
            
            <button class="block show-guides" onclick="show_all_guides()"> [ show ] </button>
            
          </div>
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/building-a-pictionary-app/">Building A Pictionary App</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/create-your-own-friends-with-a-gan/">Create Your Own Friends With A Gan</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/creating-a-chatbot/">Creating A Chatbot</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/creating-a-new-component/">Creating A New Component</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/custom-interpretations-with-blocks/">Custom Interpretations With Blocks</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/developing-faster-with-reload-mode/">Developing Faster With Reload Mode</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/gradio-and-llm-agents/">Gradio And Llm Agents</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/how-to-use-3D-model-component/">How To Use 3D Model Component</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/named-entity-recognition/">Named Entity Recognition</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/real-time-speech-recognition/">Real Time Speech Recognition</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/running-background-tasks/">Running Background Tasks</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/setting-up-a-demo-for-maximum-performance/">Setting Up A Demo For Maximum Performance</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/theming-guide/">Theming Guide</a>
            
          
            <a class="guide-link   hidden  -indent-2 ml-2 thin-link px-4 block overflow-hidden"
               style="max-width: 12rem"
               href="/using-flagging/">Using Flagging</a>
            
          
        
      </div>
      <div class="w-full">
        
        <div class="prose text-lg max-w-full"><h1 id="advanced-interface-features">Advanced Interface Features</h1>

<p>There's more to cover on the <a rel="noopener" target="_blank" href="https://gradio.app/docs#interface">Interface</a> class. This guide covers all the advanced features: Using <a rel="noopener" target="_blank" href="https://gradio.app/docs#interpretation">Interpretation</a>, custom styling, loading from the <a rel="noopener" target="_blank" href="https://hf.co">Hugging Face Hub</a>, and using <a rel="noopener" target="_blank" href="https://gradio.app/docs#parallel">Parallel</a> and <a rel="noopener" target="_blank" href="https://gradio.app/docs#series">Series</a>. </p>

<h2 id="interpreting-your-predictions">Interpreting your Predictions</h2>

<p>Most models are black boxes such that the internal logic of the function is hidden from the end user. To encourage transparency, we've made it very easy to add interpretation to your model by  simply setting the <code>interpretation</code> keyword in the <code>Interface</code> class to <code>default</code>. This allows your users to understand what parts of the input are responsible for the output. Take a look at the simple interface below which shows an image classifier that also includes interpretation:</p>

<div class='codeblock'><pre><code class='lang-python'>import requests
import tensorflow as tf

import gradio as gr

inception_net = tf.keras.applications.MobileNetV2()  # load the model

# Download human-readable labels for ImageNet.
response = requests.get("https://git.io/JJkYN")
labels = response.text.split("\n")


def classify_image(inp):
    inp = inp.reshape((-1, 224, 224, 3))
    inp = tf.keras.applications.mobilenet_v2.preprocess_input(inp)
    prediction = inception_net.predict(inp).flatten()
    return {labels[i]: float(prediction[i]) for i in range(1000)}


image = gr.Image(shape=(224, 224))
label = gr.Label(num_top_classes=3)

demo = gr.Interface(
    fn=classify_image, inputs=image, outputs=label, interpretation="default"
)

demo.launch()
</code></pre></div>

<p>In addition to <code>default</code>, Gradio also includes <a rel="noopener" target="_blank" href="https://christophm.github.io/interpretable-ml-book/shap.html">Shapley-based interpretation</a>, which provides more accurate interpretations, albeit usually with a slower runtime. To use this, simply set the <code>interpretation</code> parameter to <code>"shap"</code> (note: also make sure the python package <code>shap</code> is installed). Optionally, you can modify the <code>num_shap</code> parameter, which controls the tradeoff between accuracy and runtime (increasing this value generally increases accuracy). Here is an example:</p>

<div class='codeblock'><pre><code class='lang-python'>gr.Interface(fn=classify_image, inputs=image, outputs=label, interpretation="shap", num_shap=5).launch()
</code></pre></div>

<p>This will work for any function, even if internally, the model is a complex neural network or some other black box. If you use Gradio's <code>default</code> or <code>shap</code> interpretation, the output component must be a <code>Label</code>. All common input components are supported. Here is an example with text input.</p>

<div class='codeblock'><pre><code class='lang-python'>import gradio as gr

male_words, female_words = ["he", "his", "him"], ["she", "hers", "her"]


def gender_of_sentence(sentence):
    male_count = len([word for word in sentence.split() if word.lower() in male_words])
    female_count = len(
        [word for word in sentence.split() if word.lower() in female_words]
    )
    total = max(male_count + female_count, 1)
    return {"male": male_count / total, "female": female_count / total}


demo = gr.Interface(
    fn=gender_of_sentence,
    inputs=gr.Textbox(value="She went to his house to get her keys."),
    outputs="label",
    interpretation="default",
)

demo.launch()
</code></pre></div>

<p>So what is happening under the hood? With these interpretation methods, Gradio runs the prediction multiple times with modified versions of the input. Based on the results, you'll see that the interface automatically highlights the parts of the text (or image, etc.) that contributed increased the likelihood of the class as red. The intensity of color corresponds to the importance of that part of the input. The parts that decrease the class confidence are highlighted blue.</p>

<p>You can also write your own interpretation function. The demo below adds custom interpretation to the previous demo. This function will take the same inputs as the main wrapped function. The output of this interpretation function will be used to highlight the input of each input component - therefore the function must return a list where the number of elements corresponds to the number of input components. To see the format for interpretation for each input component, check the Docs.</p>

<div class='codeblock'><pre><code class='lang-python'>import re

import gradio as gr

male_words, female_words = ["he", "his", "him"], ["she", "hers", "her"]


def gender_of_sentence(sentence):
    male_count = len([word for word in sentence.split() if word.lower() in male_words])
    female_count = len(
        [word for word in sentence.split() if word.lower() in female_words]
    )
    total = max(male_count + female_count, 1)
    return {"male": male_count / total, "female": female_count / total}


# Number of arguments to interpretation function must
# match number of inputs to prediction function
def interpret_gender(sentence):
    result = gender_of_sentence(sentence)
    is_male = result["male"] > result["female"]
    interpretation = []
    for word in re.split("( )", sentence):
        score = 0
        token = word.lower()
        if (is_male and token in male_words) or (not is_male and token in female_words):
            score = 1
        elif (is_male and token in female_words) or (
            not is_male and token in male_words
        ):
            score = -1
        interpretation.append((word, score))
    # Output must be a list of lists containing the same number of elements as inputs
    # Each element corresponds to the interpretation scores for the given input
    return [interpretation]


demo = gr.Interface(
    fn=gender_of_sentence,
    inputs=gr.Textbox(value="She went to his house to get her keys."),
    outputs="label",
    interpretation=interpret_gender,
)

demo.launch()
</code></pre></div>

<p>Learn more about Interpretation in the <a rel="noopener" target="_blank" href="https://gradio.app/docs#interpretation">docs</a>. </p>

<h2 id="custom-styling">Custom Styling</h2>

<p>If you'd like to have more fine-grained control over any aspect of your demo, you can also write your own css or pass in a filepath to a css file, with the <code>css</code> parameter of the <code>Interface</code> class.</p>

<div class='codeblock'><pre><code class='lang-python'>gr.Interface(..., css="body {background-color: red}")
</code></pre></div>

<p>If you'd like to reference external files in your css, preface the file path (which can be a relative or absolute path) with <code>"file="</code>, for example:</p>

<div class='codeblock'><pre><code class='lang-python'>gr.Interface(..., css="body {background-image: url('file=clouds.jpg')}")
</code></pre></div>

<h2 id="loading-hugging-face-models-and-spaces">Loading Hugging Face Models and Spaces</h2>

<p>Gradio integrates nicely with the <a rel="noopener" target="_blank" href="https://hf.co">Hugging Face Hub</a>, allowing you to load models and Spaces with just one line of code. To use this, simply use the <code>load()</code> method in the <code>Interface</code> class. So:</p>

<ul>
<li>To load any model from the Hugging Face Hub and create an interface around it, you pass <code>"model/"</code> or <code>"huggingface/"</code> followed by the model name, like these examples:</li>
</ul>

<div class='codeblock'><pre><code class='lang-python'>gr.Interface.load("huggingface/gpt2").launch();
</code></pre></div>

<div class='codeblock'><pre><code class='lang-python'>gr.Interface.load("huggingface/EleutherAI/gpt-j-6B", 
    inputs=gr.Textbox(lines=5, label="Input Text")  # customizes the input component
).launch()
</code></pre></div>

<ul>
<li>To load any Space from the Hugging Face Hub and recreate it locally (so that you can customize the inputs and outputs for example), you pass <code>"spaces/"</code> followed by the model name:</li>
</ul>

<div class='codeblock'><pre><code class='lang-python'>gr.Interface.load("spaces/eugenesiow/remove-bg", inputs="webcam", title="Remove your webcam background!").launch()
</code></pre></div>

<p>One of the great things about loading Hugging Face models or spaces using Gradio is that you can then immediately use the resulting <code>Interface</code> object just like function in your Python code (this works for every type of model/space: text, images, audio, video, and even multimodal models):</p>

<div class='codeblock'><pre><code class='lang-python'>io = gr.Interface.load("models/EleutherAI/gpt-neo-2.7B")
io("It was the best of times")  # outputs model completion
</code></pre></div>

<h2 id="putting-interfaces-in-parallel-and-series">Putting Interfaces in Parallel and Series</h2>

<p>Gradio also lets you mix interfaces very easily using the <code>gradio.Parallel</code> and <code>gradio.Series</code> classes. <code>Parallel</code> lets you put two similar models (if they have the same input type) in parallel to compare model predictions:</p>

<div class='codeblock'><pre><code class='lang-python'>generator1 = gr.Interface.load("huggingface/gpt2")
generator2 = gr.Interface.load("huggingface/EleutherAI/gpt-neo-2.7B")
generator3 = gr.Interface.load("huggingface/EleutherAI/gpt-j-6B")

gr.Parallel(generator1, generator2, generator3).launch()
</code></pre></div>

<p><code>Series</code> lets you put models and spaces in series, piping the output of one model into the input of the next model. </p>

<div class='codeblock'><pre><code class='lang-python'>generator = gr.Interface.load("huggingface/gpt2")
translator = gr.Interface.load("huggingface/t5-small")

gr.Series(generator, translator).launch()  # this demo generates text, then translates it to German, and outputs the final result.
</code></pre></div>

<p>And of course, you can also mix <code>Parallel</code> and <code>Series</code> together whenever that makes sense!</p>

<p>Learn more about Parallel and Series in the <a rel="noopener" target="_blank" href="https://gradio.app/docs#parallel">docs</a>. </p></div>
        <div class="flex justify-between mt-4">
          
            <a href="/more-on-examples/"
               class="text-left p-4 bg-gray-50 hover:underline">
              <div class="text-gray-600 block">&lt; Previous</div>
              <div class="text-lg font-semibold">More On Examples</div>
            </a>
          
          
            <a href="/four-kinds-of-interfaces/"
               class="text-right p-4 bg-gray-50 hover:underline">
              <div class="text-gray-600 block">Next &gt;</div>
              <div class="text-lg font-semibold">Four Kinds Of Interfaces</div>
            </a>
          
        </div>
      </div>
    </div>
    <script src="/assets/prism.js"></script>
    <script>window.__gradio_mode__ = "website";</script>
    <footer class="container mx-auto flex-row flex items-center px-4 py-6 justify-between">
  <a href="/">
    <svg width="90"
         viewBox="0 0 451 105"
         fill="none"
         xmlns="http://www.w3.org/2000/svg">
      <path d="M45.7779 9.7789L91.2031 34.6919V49.2071L45.7779 24.2941V9.7789Z" fill="#FF7C00" fill-opacity="0.75" />
      <path d="M91.1878 34.6924L45.5957 59.6992V74.3078L91.1878 49.301V34.6924Z" fill="#FF7C00" />
      <path d="M-0.000525172 34.6924L45.5957 59.6992V74.3079L-0.000525172 49.3011V34.6924Z" fill="#FF7C00"
      fill-opacity="0.75" />
      <path d="M45.7731 9.68544L0.00585938 34.6919V49.3006L45.7731 24.2942V9.68544Z" fill="#FF7C00" />
      <path d="M45.7779 34.9728L91.2031 59.8857V74.4009L45.7779 49.488V34.9728Z" fill="#FF7C00" fill-opacity="0.75" />
      <path d="M91.1878 59.8853L45.5957 84.8921V99.5007L91.1878 74.4939V59.8853Z" fill="#FF7C00" />
      <path d="M-0.000525172 59.8853L45.5957 84.8921V99.5008L-0.000525172 74.494V59.8853Z" fill="#FF7C00"
      fill-opacity="0.75" />
      <path d="M45.7731 34.8783L0.00585938 59.8848V74.4935L45.7731 49.4871V34.8783Z" fill="#FF7C00" />
      <path
      d="M139.727 96.9891L148.148 86.596C152.803 90.8598 157.991 92.9917 163.711 92.9917C167.549 92.9917 170.711 92.4232 173.198 91.2862C175.686 90.1492 176.929 88.5858 176.929 86.596C176.929 83.2205 174.176 81.5327 168.668 81.5327C167.176 81.5327 164.955 81.7104 162.006 82.0657C159.057 82.421 156.836 82.5987 155.344 82.5987C146.176 82.5987 141.593 79.312 141.593 72.7386C141.593 70.8554 142.357 69.0077 143.885 67.1956C145.413 65.3835 147.189 64.0511 149.214 63.1983C142.712 58.97 139.461 52.9829 139.461 45.237C139.461 39.1255 141.699 34.08 146.176 30.1004C150.653 26.0853 156.161 24.0777 162.699 24.0777C167.815 24.0777 172.097 25.0371 175.544 26.9558L180.767 20.8799L189.987 29.2476L183.645 33.8845C185.848 37.2245 186.949 41.1686 186.949 45.7166C186.949 52.219 184.959 57.4244 180.98 61.3329C177.036 65.2058 172.044 67.1423 166.003 67.1423C165.044 67.1423 163.765 67.0535 162.166 66.8758L159.981 66.5561C159.732 66.5561 158.772 66.9469 157.102 67.7286C155.468 68.4748 154.651 69.2565 154.651 70.0737C154.651 71.495 155.877 72.2056 158.328 72.2056C159.43 72.2056 161.277 71.9391 163.871 71.4062C166.465 70.8732 168.686 70.6067 170.534 70.6067C183.503 70.6067 189.987 75.8121 189.987 86.2229C189.987 91.9791 187.393 96.4916 182.206 99.7606C177.018 103.065 170.764 104.717 163.445 104.717C154.704 104.717 146.798 102.141 139.727 96.9891ZM153.052 45.2903C153.052 48.6658 153.976 51.384 155.823 53.4448C157.707 55.4701 160.229 56.4828 163.392 56.4828C166.554 56.4828 168.988 55.4879 170.693 53.4981C172.399 51.5083 173.252 48.7724 173.252 45.2903C173.252 42.4122 172.328 39.9782 170.48 37.9885C168.668 35.9987 166.305 35.0038 163.392 35.0038C160.336 35.0038 157.849 35.9631 155.93 37.8819C154.011 39.8006 153.052 42.27 153.052 45.2903Z"
      fill="#FF7C00" />
      <path
      d="M231.773 37.6687C229.392 36.1053 226.78 35.3236 223.938 35.3236C220.847 35.3236 218.093 36.7271 215.677 39.5341C213.296 42.3411 212.106 45.7699 212.106 49.8206V82.3322H198.781V25.2503H212.106V30.4735C215.837 26.2807 220.793 24.1843 226.976 24.1843C231.524 24.1843 235.006 24.8772 237.422 26.263L231.773 37.6687Z"
      fill="#FF7C00" />
      <path
      d="M277.236 76.6293C276.028 78.6191 273.913 80.2536 270.893 81.5327C267.909 82.7763 264.782 83.3981 261.513 83.3981C255.366 83.3981 250.533 81.8703 247.016 78.8145C243.498 75.7233 241.739 71.3529 241.739 65.7033C241.739 59.0944 244.209 53.9245 249.148 50.1936C254.122 46.4628 261.175 44.5974 270.307 44.5974C271.87 44.5974 273.718 44.8639 275.85 45.3968C275.85 38.6813 271.604 35.3236 263.112 35.3236C258.102 35.3236 253.909 36.1586 250.533 37.8286L247.655 27.4888C252.239 25.2858 257.693 24.1843 264.018 24.1843C272.723 24.1843 279.101 26.1741 283.152 30.1537C287.202 34.0977 289.228 41.5949 289.228 52.6453V64.8505C289.228 72.4543 290.756 77.2334 293.811 79.1876C292.71 81.1063 291.484 82.2789 290.134 82.7053C288.783 83.1672 287.238 83.3981 285.497 83.3981C283.578 83.3981 281.855 82.6875 280.327 81.2662C278.799 79.845 277.769 78.2993 277.236 76.6293ZM275.956 55.4701C273.682 55.0082 271.977 54.7773 270.84 54.7773C260.322 54.7773 255.064 58.2238 255.064 65.117C255.064 70.2336 258.031 72.7919 263.965 72.7919C271.959 72.7919 275.956 68.7946 275.956 60.7999V55.4701Z"
      fill="#FF7C00" />
      <path
      d="M340.393 82.3322V78.8678C339.292 80.0759 337.427 81.1419 334.797 82.0657C332.168 82.954 329.45 83.3981 326.643 83.3981C318.684 83.3981 312.412 80.8754 307.829 75.8299C303.28 70.7843 301.006 63.749 301.006 54.724C301.006 45.6989 303.618 38.3615 308.841 32.712C314.1 27.0269 320.673 24.1843 328.561 24.1843C332.896 24.1843 336.84 25.0726 340.393 26.8492V3.98449L353.718 0.786621V82.3322H340.393ZM340.393 38.8945C337.551 36.6205 334.584 35.4835 331.493 35.4835C326.163 35.4835 322.059 37.1179 319.181 40.3869C316.303 43.6203 314.864 48.2749 314.864 54.3509C314.864 66.2185 320.584 72.1523 332.026 72.1523C333.305 72.1523 334.868 71.7792 336.716 71.0331C338.599 70.2514 339.825 69.4697 340.393 68.688V38.8945Z"
      fill="#FF7C00" />
      <path
      d="M377.542 3.13172C379.674 3.13172 381.486 3.89566 382.978 5.42353C384.506 6.91586 385.27 8.72799 385.27 10.8599C385.27 12.9918 384.506 14.8217 382.978 16.3496C381.486 17.8419 379.674 18.5881 377.542 18.5881C375.41 18.5881 373.58 17.8419 372.052 16.3496C370.56 14.8217 369.814 12.9918 369.814 10.8599C369.814 8.72799 370.56 6.91586 372.052 5.42353C373.58 3.89566 375.41 3.13172 377.542 3.13172ZM370.667 82.3322V36.1763H363.365V25.2503H384.151V82.3322H370.667Z"
      fill="#FF7C00" />
      <path
      d="M395.983 53.658C395.983 44.9527 398.488 37.8641 403.498 32.3922C408.544 26.9203 415.188 24.1843 423.431 24.1843C432.101 24.1843 438.834 26.8137 443.631 32.0724C448.428 37.3311 450.826 44.5263 450.826 53.658C450.826 62.7541 448.375 69.9849 443.471 75.3502C438.603 80.7155 431.924 83.3981 423.431 83.3981C414.762 83.3981 408.011 80.6977 403.178 75.2969C398.381 69.8605 395.983 62.6476 395.983 53.658ZM409.84 53.658C409.84 66.2363 414.371 72.5254 423.431 72.5254C427.589 72.5254 430.875 70.8909 433.291 67.622C435.743 64.3531 436.969 59.6984 436.969 53.658C436.969 41.2574 432.456 35.0571 423.431 35.0571C419.274 35.0571 415.97 36.6915 413.518 39.9605C411.066 43.2294 409.84 47.7952 409.84 53.658Z"
      fill="#FF7C00" />
    </svg>
  </a>
  <div class="flex gap-3">
    <a href="https://status.gradio.app" target="_blank" class="text-gray-400 hover:text-gray-500">
      <span>Status</span>
    </a>
    <a class="hover:opacity-75 transition" href="https://twitter.com/Gradio">
      <img src="/assets/img/twitter.svg" class="w-6">
    </a>
    <a class="hover:opacity-75 transition"
       href="https://github.com/gradio-app/gradio">
      <img src="/assets/img/github.svg" class="w-6">
    </a>
  </div>
</footer>
    <script>
      let sidebar = document.querySelector(".side-navigation")
      let target_link = document.querySelector(".current-nav-link");
      if (target_link.previousElementSibling.classList.contains("category-link")) {
        target_link = target_link.previousElementSibling;
      }
      sidebar.scrollTop = target_link.offsetTop
      document.querySelectorAll(".prose h2").forEach(subheader => {
        document.querySelector(".navigation").innerHTML += `
          <a class='subheading block thin-link -indent-2 ml-4 mr-2' href='#${subheader.id}'>${subheader.innerText}</a>
        `
      })

      const COLORS = ["bg-green-50", "bg-yellow-50", "bg-red-50", "bg-pink-50", "bg-purple-50"];
      document.querySelectorAll(".space-link").forEach(guide => {
        const color = COLORS[Math.floor(Math.random() * COLORS.length)]
        guide.classList.add(color);
      })

      const show_all_guides = () => {
        document.querySelectorAll(".guide-link").forEach(g => g.classList.remove("hidden"));
        document.querySelector(".show-guides").remove();
      }
    </script>
    <script>let mainNavLinks = document.querySelectorAll(".navigation a");
window.addEventListener("scroll", event => {
    let fromTop = window.scrollY;
    let lowest_link = null;
    mainNavLinks.forEach(link => {
        let section = document.querySelector(link.hash);
        if (section.offsetTop <= fromTop * 1.01) {
            lowest_link = link;
        }
        link.classList.remove("current-nav-link");
    });
    lowest_link.classList.add("current-nav-link");
});</script>
    <script>// adds anchor button when hovering over headers, except on touch devices where instead the header becomes a link

function createAnchorTag(link) {
        let a = document.createElement('a');
        a.href = link;
        a.classList.add("invisible", "group-hover-visible");
        let img = document.createElement('img');
        img.classList.add("anchor-img")
        img.src = "/assets/img/anchor.svg";
        a.appendChild(img);
        return a;
    }
function createMobileAnchorTag(link) {
        let a = document.createElement('a');
        a.href = link;
        a.classList.add("no-underline")
        return a;
    }

var headers = document.querySelectorAll("h2, h3");

function isTouchDevice() {
        return (('ontouchstart' in window) ||
           (navigator.maxTouchPoints > 0) ||
           (navigator.msMaxTouchPoints > 0));
      }

if (isTouchDevice()) {
      for (let i = 0; i < headers.length; i++) {
            let link = '#' + headers[i].id;
            var wrapper = createMobileAnchorTag(link);
            headers[i].replaceWith(wrapper);
            wrapper.appendChild(headers[i]);
      }
} else {
      for (let i = 0; i < headers.length; i++) {
        headers[i].classList.add("group")
        let link = '#' + headers[i].id;
        var anchorTag = createAnchorTag(link);
        headers[i].appendChild(createAnchorTag(link));
      }
}</script>
    <script>// add copy buttons to all codeblocks

const svgCopy =
'<svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true"><path fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path><path fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path></svg>';
const svgCheck =
'<svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true"><path fill-rule="evenodd" fill="rgb(255, 124, 1)" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path></svg>';


const addCopyButtons = (clipboard) => {
  document.querySelectorAll("pre > code").forEach((codeBlock) => {
  const button = document.createElement("button");
  button.classList.add("clipboard-button");
  button.type = "button";
  button.innerHTML = svgCopy;
  button.addEventListener("click", () => {
    clipboard.writeText(codeBlock.innerText).then(
      () => {
        button.blur();
        button.innerHTML = svgCheck;
        setTimeout(() => (button.innerHTML = svgCopy), 2000);
      },
      (error) => (button.innerHTML = "Error")
    );
  });
  const pre = codeBlock.parentNode;
  pre.parentNode.insertBefore(button, pre);
});
};

if (navigator && navigator.clipboard) {
addCopyButtons(navigator.clipboard);
};</script>
    <script>function load_gradio(FILE_URL) {
    console.log(FILE_URL);
    var len = Array.from(document.querySelectorAll('script')).filter(e => e.getAttribute('src') == FILE_URL).length;
    if (len === 0) {
      let scriptEle = document.createElement("script");
      scriptEle.setAttribute("src", FILE_URL);
      scriptEle.setAttribute("type", "module");
      document.body.appendChild(scriptEle);
    }
  }

  

  load_gradio("https://gradio.s3-us-west-2.amazonaws.com/3.27.0/gradio.js");</script>
  </body>
</html>